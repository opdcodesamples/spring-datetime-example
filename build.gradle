buildscript {
	ext {
        springBootVersion = '2.0.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
  id "org.sonarqube" version "2.6"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'



jar {
    baseName = 'springdatetime'
    version =  '0.0.1-SNAPSHOT'
}

ext {
	jacocoVersion = '0.7.6.201602180812'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

task wrapper(type: Wrapper) {
	gradleVersion = '4.9'

}

dependencies {
	compile("org.springframework.boot:spring-boot-starter")
	compile("org.springframework.boot:spring-boot-starter-data-jpa")
	compile("org.springframework.boot:spring-boot-starter-thymeleaf")
	
    compile("org.springframework.boot:spring-boot-starter-web")	
	runtime("org.springframework.boot:spring-boot-devtools")
	//compile("org.hsqldb:hsqldb")
	runtime("com.h2database:h2")	
	compile("org.springframework.boot:spring-boot-starter-test")
	compile("org.webjars:bootstrap:3.3.7")
    testCompile("junit:junit")
}

jacoco {
	toolVersion = jacocoVersion
}

jacocoTestReport {
	reports {
		html.enabled true
		xml.enabled true
		csv.enabled true
		html.destination "$buildDir/reports/jacoco/html"
		xml.destination "$buildDir/reports/jacoco/xml"
		csv.destination "$buildDir/reports/jacoco/csv"
	}
}

jacocoTestReport.dependsOn test

test {
	ignoreFailures true
	jacoco {
		destinationFile = file("$buildDir/jacoco/junitTest.exec")
	}
	
}

test.finalizedBy jacocoTestReport





